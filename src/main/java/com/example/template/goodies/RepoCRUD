// findById
        String query = "SELECT * FROM \"TABELA\" WHERE \"Id\" = ?";
        try {
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setInt(1, integer);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                return Optional.of(new TABELA(
                        resultSet.getInt("Id"),
                        resultSet.getString("CAMP1")
                ));
            } else {
                return Optional.empty();
            }
            
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        
// findAll
            String query = "SELECT * FROM \"TABELA\"";
            List<ENTITATE> bands = new ArrayList<>();
            try {
                Statement statement = connection.createStatement();
                ResultSet resultSet = statement.executeQuery(query);
                while (resultSet.next()) {
                    bands.add(new ENTITATE(
                            resultSet.getInt(CAMP1),
                            resultSet.getString(CAMP2)
                    ));
                }
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
            return bands;    
        
// insert
        String query = "INSERT INTO \"TABELA\" (\"CAMP1\", \"CAMP2\") VALUES (?, ?)";
        try {
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, VAL1);
            statement.setInt(2, VAL2);
            statement.executeUpdate();
            return Optional.of(entity);
            
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        
// delete
        String query = "DELETE FROM \"TABELA\" WHERE \"Id\" = ?";
        try {
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setInt(1, integer);
            statement.executeUpdate();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }